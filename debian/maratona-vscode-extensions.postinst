#!/bin/bash
set -e
source /usr/share/debconf/confmodule

try_install_extension() {
	options="--extensions-dir /opt/vscode-extensions/ --user-data-dir /opt/vscode-extensions/"
	try=0
	while ! flatpak run com.visualstudio.code --list-extensions $options | grep -q $1 && [ $try -lt 3 ]; do
		flatpak run com.visualstudio.code --install-extension $1 $options
	  try=$((try+1))
	done

	# In case of success, return 0. In case of failure, return 1.
	if ! flatpak run com.visualstudio.code --list-extensions $options | grep -q $1 ; then
		return 1
	else
		return 0
	fi
}

flag=true
while $flag ; do
	extensions=""

	extensions_list=(
		ms-vscode.cpptools
		austin.code-gnu-global
		formulahendry.code-runner
		vscjava.vscode-java-debug
		vscjava.vscode-java-dependency
		vscjava.vscode-java-pack
		vscjava.vscode-java-test
		redhat.java
		vscjava.vscode-maven
		ms-python.python
  )

	for extension in "${extensions_list[@]}"
	do
		try_install_extension $extension || extensions=$extensions" "$extension
	done

	if [ "$extensions" != "" ]; then
		db_subst maratona-vscode-extensions/question_try_again package $extensions || true
		db_input high maratona-vscode-extensions/question_try_again || true
		db_go || true
		db_get maratona-vscode-extensions/question_try_again || true
		if [ "$RET" == "Later" ]; then
			flag=0
			db_input high maratona-vscode-extensions/notice || true
			db_go || true
			db_get maratona-vscode-extensions/notice
		fi
	else
		flag=false
	fi
done

rm -rf /usr/share/maratona-vscode-extensions
mv /opt/vscode-extensions /usr/share/maratona-vscode-extensions
